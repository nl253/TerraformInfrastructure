openapi: "3.0.0"
info:
  version: 1.0.0
  name: EXAMPLE REST API
  license:
    name: MIT
servers:
  - url: http://store.swagger.io/v1
paths:
  /invoke/{id}:
    get:
      summary: ''
      operationId: invoke
      tags:
        - invoke
      parameters:
        - name: id
          in: path
          required: true
          description: The id of the item to retrieve
          schema:
            type: string
      x-amazon-apigateway-integration:
        uri:
          arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:${AWS::Partition}:lambda:${AWS::Region}:${AWS::AccountId}:function:test-api-rest-app-123551-lambda-func1/invocations
        responses:
          default:
            statusCode: "200"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        contentHandling: "CONVERT_TO_TEXT"
        type: "aws_proxy"
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Item:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
